name: Windows Build

on:
  push:
    branches:
      - master
  pull_request:

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  
jobs:
  build:

    runs-on: windows-latest
    
    steps:

    - uses: actions/checkout@v1

    - name: Install Qt
      uses: jurplel/install-qt-action@v2

    - name: Cache dependencies
      id: cache-dependencies
      uses: actions/cache@v1
      with:
        path: ${{runner.workspace}}\deps
        key: ${{ runner.os }}-node

    - name: Build dependencies
      shell: bash
      if: steps.cache-dependencies.outputs.cache-hit != 'true'
      run: .github/workflows/build_dependencies_windows.sh "${{runner.workspace}}\deps"

    # - uses: actions/upload-artifact@v1
    #   with:
    #     name: deps
    #     path: ${{runner.workspace}}\deps

    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory "${{runner.workspace}}\build"

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{runner.workspace}}/build
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DSHAPEWORKS_SUPERBUILD=OFF -DVXL_DIR="${{runner.workspace}}\deps\vxl\build" -DITK_DIR="${{runner.workspace}}\deps\lib\cmake\ITK-5.0" -DVTK_DIR="${{runner.workspace}}\deps\lib\cmake\vtk-8.2" -DBuild_Studio=ON

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build . --config $BUILD_TYPE

    - name: Copy Libraries
      working-directory: ${{runner.workspace}}/build
      run: xcopy /f ${{runner.workspace}}\deps\bin\*.dll ${{runner.workspace}}\build\bin\Release
    
    - uses: actions/upload-artifact@v1
      with:
        name: artifact
        path: ${{runner.workspace}}\build
    
    - name: Test
      working-directory: ${{runner.workspace}}/build
      shell: bash
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C $BUILD_TYPE
